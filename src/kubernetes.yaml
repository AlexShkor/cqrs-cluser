apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: default-ingress
  annotations:
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /frontend
        backend:
          serviceName: frontend
          servicePort: 5000
      - path: /web-api
        backend:
          serviceName: web-api
          servicePort: 5001
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  type: NodePort
  ports:
    - port: 5000
      targetPort: http
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: yarmolovichalex1/frontend
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: web-api
  labels:
    app: web-api
spec:
  selector:
    app: web-api
  type: NodePort
  ports:
    - port: 5001
      targetPort: http
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: web-api
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: web-api
    spec:
      containers:
        - name: web-api
          image: yarmolovichalex1/web-api
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 5001
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: write-model
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: write-model
    spec:
      containers:
        - name: write-model
          image: yarmolovichalex1/write-model
          imagePullPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: read-model
spec:
  replicas: 3
  template:
    metadata:
      labels:
        app: read-model
    spec:
      containers:
        - name: read-model
          image: yarmolovichalex1/read-model
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: rabbit-client
  labels:
    app: rabbit-client
spec:
  selector:
    app: rabbit
  type: NodePort
  ports:
    - port: 15672
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: rabbit
  labels:
    app: rabbit
spec:
  selector:
    app: rabbit
  ports:
    - port: 5672
      targetPort: tcp
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: rabbit
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: rabbit
    spec:
      containers:
        - name: rabbit
          image: "rabbitmq:3-management"
          ports:
            - name: http
              containerPort: 15672
            - name: tcp
              containerPort: 5672
---
apiVersion: v1
kind: Service
metadata:
  name: eventstore-client
  labels:
    app: eventstore-client
spec:
  selector:
    app: eventstore
  type: NodePort
  ports:
    - port: 2113
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: eventstore
  labels:
    app: eventstore
spec:
  selector:
    app: eventstore
  ports:
    - port: 1113
      targetPort: tcp
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: eventstore
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: eventstore
    spec:
      containers:
        - name: eventstore
          image: eventstore/eventstore
          ports:
            - name: http
              containerPort: 2113
            - name: tcp
              containerPort: 1113
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo
          ports:
            - name: tcp
              containerPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-client
  labels:
    app: mongo-client
spec:
  selector:
    app: mongo
  type: NodePort
  ports:
    - port: 27017
      targetPort: tcp
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: tcp