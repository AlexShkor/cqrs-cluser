apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  type: LoadBalancer
  ports:
    - port: 5000
      targetPort: http
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: yarmolovichalex1/frontend
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
        - name: bb
          image: gcr.io/google_containers/busybox
          command:
            - sh
            - "-c"
            - sleep 5; wget -O - ${KUBERNETES_RO_SERVICE_HOST}:${KUBERNETES_RO_SERVICE_PORT}/api/v1/pods/;
              sleep 10000
          ports:
            - containerPort: 8080
          env:
            - name: KUBERNETES_RO_SERVICE_HOST
              value: 127.0.0.1
            - name: KUBERNETES_RO_SERVICE_PORT
              value: '8001'
          volumeMounts:
            - name: test-volume
              mountPath: "/mount/test-volume"
        - name: kubectl
          image: gcr.io/google_containers/kubectl:v0.18.0-120-gaeb4ac55ad12b1-dirty
          imagePullPolicy: Always
          args:
            - proxy
            - "-p"
            - '8001'
      volumes:
        - name: test-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: web-api
  labels:
    app: web-api
spec:
  selector:
    app: web-api
  type: LoadBalancer
  ports:
    - port: 5001
      targetPort: http
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: web-api
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: web-api
    spec:
      containers:
        - name: web-api
          image: yarmolovichalex1/web-api
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 5001
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: write-model
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: write-model
    spec:
      containers:
        - name: write-model
          image: yarmolovichalex1/write-model
          imagePullPolicy: Always
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: read-model
spec:
  replicas: 2
  template:
    metadata:
      labels:
        app: read-model
    spec:
      containers:
        - name: read-model
          image: yarmolovichalex1/read-model
          imagePullPolicy: Always